> Urbit's Killer App: Community Architecture Tools in Talk
~hasber-tocled-davlyt-harwex--lorren-ralrym-marreg-wanzod


People often ask what the "killer app" will be that propels Urbit to mass adoption. One answer has been that the platform will allow developers to quickly and easily create useful and fun programs, because things that have to be reimplemented in each application when using the current stack are standardized at the protocol level in Urbit. The other answer is that the scarcity of identities on Urbit allows for modes of social interaction that haven't been possible since the early days of the internet.

I contend that both of these answers are correct, and that the initial "killer app" should be admin tools in Talk that allow user identities to be managed in novel ways. This idea has been bouncing around in my head ever since ~palfun's post about allowing online communities to develop as exclusive "warrens", rather than open "plazas" where the quality of discourse degenerates to the level of society's lowest common denominator. 

This distinction is useful, but it must be invoked with caution, because different communities serve different purposes. Discussions in private clubs may be more intellectually stimulating than ones held in public squares, but sometimes you want to sample the pulse of the man on the street. Also, some online communities are more content-centric than identity-centric, and the optimal balance between maximizing the pool of submissions without diluting the quality of collective discernment depends on domain-specific factors. The masses may not be qualified to judge fine literature or innovations in set theory, but one can trust their upvotes in a "chestiest co-eds" subreddit. 

I propose that, instead of adopting a particular social architecture, Talk should aim to give would-be admins a set of flexible and powerful tools that allow them to: (1) quickly and easily replicate the architecture and rules of existing social apps and sites; (2) combine these rules and architectures in novel ways; and (3) easily define new rules and architectures, so that their utility can be tested in the wild. 

Goals #1 already seem to be part of Tlon's plans, but I believe there is tremendous low-hanging fruit with Goals #2 and #3. For example, the white-list/black-list functionality could be expanded to allow for arbitrary models of access distribution. Admins should be able to easily defines rules for distributing white-list invites to members (e.g., at a constant rate to everyone; at a rate that accelerates with seniority; in proportion to upvotes on community submissions, etc.) as well as black-list propagation rules. (e.g., blacklisting a member automatically blacklists whoever gave the member an invite vs. a "three strikes" model). 

An even better system would allow for an arbitrary quantity of lists to be created, each of which confers different privileges on the Urbits therein. This will be important for communities that permit open discussion and distribution of samizdat and wrongthink, since they must insulate themselves from hostile brigading by carefully managing member privileges. (e.g., gradually increasing the number of posts permitted per day, requiring a sufficiently high user score or high-ranked content submission to acquire full-member status, connecting the visibility of various sub-fora to membership level.) 

Finally, Talk should harness the fact that each community is operating within one global namespace to create interlinked structures of administration. The simplest example is shared black lists between communities, but the possibilities are endless (e.g., bootstrapping a new community by distributing z-list invites to all members of x list in y community; allowing for upvotes in one community to boost reputation in another; defining thresholds so that any user whose submission stays on the front page of community a for y period is elevated to the z list in community b).

Admins should, of course, have full control over how much information about their communities they make available to the public or other admins. Likewise, users should be provided the ability to create different lists of the communities where they are members, and to share each of those lists in different ways (e.g., a list of circles you share with everyone, a list of circles you share with all members of y circle, a list of circles you share only with users x and z, and a list of circles you share with no one). 

I do not have the time or technical acumen to develop these tools for Talk, so my opinion on its own means very little. But my proposal comports with the essential goals of Urbit as a project.

In the short term, community-architecture tools would attract developers by showcasing how Urbit makes it possible to quickly and easily build things that are difficult or impossible with the legacy stack. In the medium term, the communities created by those developers would provide the initial value-proposition that induces end users to bother joining a new network. In the long term, the ability of communities to adopt their own rules of membership and authority could become a defining aspect of what makes Urbit a truly decentralized digital republic. 

Sincerely,
~ravzod-loprex (through some hideous alias)